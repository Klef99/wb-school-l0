// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/klef99/wb-school-l0/internal/app/adapters/http"
	"github.com/klef99/wb-school-l0/internal/app/adapters/http/v1"
	"github.com/klef99/wb-school-l0/internal/app/config"
	"github.com/klef99/wb-school-l0/internal/service"
	"github.com/klef99/wb-school-l0/internal/storage"
)

// Injectors from wire.go:

func InitializeDependencies() (HTTPAdapter, func(), error) {
	configConfig, err := config.LoadConfig()
	if err != nil {
		return HTTPAdapter{}, nil, err
	}
	logger := ProvideLogger(configConfig)
	echo, cleanup := ProvideEcho(logger)
	postgres, cleanup2, err := ProvidePostgres(configConfig)
	if err != nil {
		cleanup()
		return HTTPAdapter{}, nil, err
	}
	healthStorage := storage.NewHealthStorage(postgres)
	healthService := service.NewHealthService(healthStorage)
	healthHandler := v1.NewHealthHandler(healthService)
	rootHandler := http.NewRootHandler(healthHandler)
	httpAdapter, cleanup3, err := ProvideHTTPAdapter(configConfig, logger, echo, rootHandler)
	if err != nil {
		cleanup2()
		cleanup()
		return HTTPAdapter{}, nil, err
	}
	return httpAdapter, func() {
		cleanup3()
		cleanup2()
		cleanup()
	}, nil
}
